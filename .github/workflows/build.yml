name: Build

on:
  push:
    tags:
      - 'v*'

jobs:
  lint:
    name: Linting
    runs-on: ubuntu-latest

    steps:
      - name: git checkout master
        uses: actions/checkout@v2

      - name: install node and npm
        uses: actions/setup-node@v2
        with:
          node-version: 15.x

      - name: install dependencies
        run: npm ci

      - name: es lint code
        run: npm run es:lint || true

      - name: coffee lint code
        run: npm run coffee:lint || true

  test:
    name: Testing
    runs-on: ubuntu-latest

    steps:
      - name: git checkout master
        uses: actions/checkout@v2

      - name: install node and npm
        uses: actions/setup-node@v2
        with:
          node-version: 15.x

      - name: install dependencies
        run: npm ci

      - name: compile and test
        run: npm run test
        env:
          CI: false

  deploy:
    name: GH pages
    runs-on: ubuntu-latest

    steps:
      - name: git checkout master
        uses: actions/checkout@v2

      - name: install node and npm
        uses: actions/setup-node@v2
        with:
          node-version: 15.x

      - name: install dependencies
        run: npm ci

      - name: build
        run: npm run build
        env:
          CI: false

      - name: deploy
        uses: JamesIves/github-pages-deploy-action@4.1.1
        with:
          branch: built-page
          folder: build

  build:
    name: Build
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: git checkout master
        uses: actions/checkout@v2

      - name: install node and npm
        uses: actions/setup-node@v2
        with:
          node-version: 15.x

      - name: install dependencies
        run: npm ci

      - name: build
        run: npm run electron:build
        env:
          CI: false
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: get tag for release
        if: startsWith(github.ref, 'refs/tags/v')
        id: get_version
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)

      - name: release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          files: dist/*
          draft: false
          prerelease: false
          name: Release ${{ steps.get_version.outputs.VERSION }}
          tag_name: ${{ steps.get_version.outputs.VERSION }}
        env:
          CI: false
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}